      program kpgen
c
c Driver program for intpnt
c
c $Id: kpgen.x,v 1.1 89/05/04 09:15:31 jim Exp Locker: jim $
c
c Parameters:
      integer mxatms,ninp,nout,ierr
      character*(*) namegr
#ifdef PARAM_H
#include PARAM_H
#else
      integer ntyp,natp,nrkp
      parameter (ntyp = 4)
      parameter (natp = 16)
      parameter (nrkp = 20)
#endif
      parameter (mxatms = natp)
      parameter (ninp = 10)      ! LWW
      parameter (nout = 6)
      parameter (namegr = ' groupname')
c Local:
      double precision ainp(3,3),binp(3,3),a(3,3),b(3,3),a0,g0,
     *   ratom(3,mxatms),atmpos(3,natp),tnp(3,48),
     *   w(nrkp),rk(3,nrkp),fvec(3,4),x1(3),x2(3),wsum
      integer natoms,type(mxatms),iprt,typ,atm,k,natmty,
     *   natmi(ntyp),ntrans,mtrans,mtran0,mtrx(3,3,48),icof(48),
     *   iatm,prev,
     *   nband(nrkp),indk(6,nrkp),mout,iflag_kgrid
      integer ppflag,iz_typ(ntyp)
      real*8 akshift(3)
      logical errflg
c Common:
      common /warn1/ mout
c Constants:
      double precision one,two,twopi
      parameter (one = 1.0d0, two = 2.0d0)
      twopi = two*acos(-one)
      mout = nout
      ppflag = 2	
ccccccc  ppflag = 1 gives wrong results in this program !!!	
c
c Read input data:
c

      open(ninp,file='kpgen.input',status='old',action='read',
     & iostat=ierr)
      if(ierr.ne.0) then
      write(6,*) "input file **kpgen.input** not found, stop"
      stop
      endif
      rewind(ninp)

      call input (twopi,mxatms,iprt,a0,g0,a,b,ainp,binp,natoms,
     *   type,ratom,errflg,ninp,nout,akshift,iz_typ,ntyp)

      if (errflg) stop
c
c Pretend to be xpw calling:
c
      mtrans = 0
c
c Convert atomic positions to lattice coordinates (keep factor
c of 2*pi, since it is present in xpw), set up type array:
c

      iatm = 0
      prev = 0
      do 20 typ = 1,ntyp
         do 30 atm = 1,natoms
            if (type(atm) .eq. typ) then
               natmty = typ
               iatm = iatm + 1
               do 3 k = 1,3
                  atmpos(k,iatm) = ratom(1,atm)*b(1,k)
     *               + ratom(2,atm)*b(2,k) + ratom(3,atm)*b(3,k)
    3          continue
            endif
   30    continue
         natmi(typ) = iatm - prev
         prev = iatm
   20 continue
      if (iatm .ne. natoms) then
         write (nout,3000)
         stop
      endif
 3000 format (' ERROR (main): Problem mapping atomic positions')
c
c Determine symmetry operations:
c
      call symgen (natmty,natmi,a,b,atmpos,mtrans,
     *   iprt,twopi,mtran0,mtrx,tnp,icof,namegr,nout)
      ntrans = mtrans
c     
c Redefine ainp and binp so that they convert directly
c from input coordinates to lattice coordinates
c ainp for real space, binp for fourier space
c     
      do 220 i = 1,3
         do 210 j = 1,3
            x1(j) = ainp(j,i) / g0
            x2(j) = binp(j,i) / a0
  210    continue
         call cnvrt (3,1,b,x1,ainp(1,i))
         call cnvrt (3,1,a,x2,binp(1,i))
  220 continue
c
c Call intpnt to generate special k points (reads from input file):
c

      call intpnt(wsum,
     *     ninp,nout,
     *     ainp,binp,b,
     *     ntrans,mtrans,icof,mtrx,
     *     nrk,nband,w,rk,indk,fvec,ppflag,akshift,
     *     iflag_kgrid)
c
C-New PART!!! Symmetry-Output for use in in PP-Codes (TM or LW)
C (SM, NREL,21 Jan 1999)
C      
cccc      call ppsym(ninp,nout,natoms,type)	

      write(6,*) "**************************************"
      if(iflag_kgrid.eq.1) then
      write(6,*)
     &"*WARNING, k-grid in kpgen.input has lower sym. than atom.conf."
        write(6,*)
     &"This might not be the optimal k-pt grid for k-pt reduction."
        write(6,*)
     &"Implicit, effective k-points are generated by symm. operations"
        write(6,*)
     &"outside the original k-point set specified by kpgen.input."
        write(6,*)
     &"If symm.'s in two atom.conf's diff., the effective kpt set"
        write(6,*) 
     &"will be diff. for the same kpgen.input (not equiv. kpt set)." 
        write(6,*) 
     &"Maybe better to change kpgen.input into more symmetric k-grid."
       endif

      write(6,*) "**************************************"
      write(6,*) "*****kpt are output in kpt.file****"
      write(6,*) "*****symmetry are output in symm.file*****"
      write(6,*) "**************************************"

      stop
      end
