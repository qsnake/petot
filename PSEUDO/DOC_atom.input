 An example atom.input file for As (starts without the "-----" line)
---------------------------------------------
   pg      Arsenic    Guess   Ecut ~ 20Ry   l=2 (maybe 0,1) as local
   tm2
   As,  ca, r
   0.0       0.0       0.0       0.0       0.0       0.0
    6    3 
    4    0     2.00      0.00
    4    1     3.00      0.00 
    4    2     0.00      0.00
   2.10     2.10     2.10                                             
------------------------------------------
    2     2.0   3.0   0.0
******************************************


 Document atom.input file:
-----------------------------------------------
  type,   title
  kerker
  Name, ex_method, spin_inform
  znuc,zsh,rsh,rmax,aa,bb    
  ncore,nval
  ni,li,zd,zu
  .......
  ni,li,zd,zu
  rc_1, rc_2, rc_3,..
---------------------------------
  llocal, occ_s, occ_p, occ_d
******************************************

 explanation:

 (0) The whole input file is free formatted, i.e, the exact on-the-line positions 
     of the numbers and characters are not important. Sure the order is important, 
     as outlined above.  

 (1) type: two character string, describes the type of pseudopotential you want to make. 

  type=
    ae ->0 all electron calculation  (better not use)
    pg ->1 pseudopotential generation w/o core correction
    pe ->2 pseudopotential generation w/  core correction exchange
    ph ->3 pseudopotential generation w/  core correction hartree/exc (not supported by PEtot)
    pt ->4 pseudopotential test  (don't use)
    pm ->5 pseudopotential test + valence charge modify (don't use)
 
    So, usually, either pg or pe is used. pe option is used, so a fixed core charge
    is used to deal with the nonlinear issue of the LDA exchange correction function. 
    This might be necessary for some large atoms. See atom_table.input for some 
    suggestions. There is no need to use it for light elements. 

 (2) title: any character string you like to input, just for the information. 

 (3) kerker: three character string, specify the methodology you want to use to 
             generate the pseudopotential. The options are:

     kerker = van Vanderbilt
     kerker = tam Troullier and Martins
     kerker = ker (yes) Kerker
     kerker = hsc (no)  Hamann Schluter and Chiang
     kerker = min (oth) datafile made for minimization
     kerker = bhs Bachelet, Hamann and Schluter
     kerker = tm2 Improved Troullier and Martins

     The suggestion is: tm2. It is the most reliable method. But if one method fail to 
     generate a nice pseudopotential, you can try others. 

 (4) Name: character string up to two characters, the periodic table name of the element, 
           e.g., As, Al, Ni, S, O, F, Si, ......

 (5) ex_method: two character string, specifies the exchange correlation function you 
           want to use.  
     ex_method = ca: Ceperly -Alder exchange-correlation function (used for PEtot LDA)
                     (Ref: Perdew & Zunger, Phys. Rev. B 23 5075 (1981))
               = pw: Perdue-Wang 92 exchange-correlation function (not used for PEtot !)
                     (Ref: J.P.Perdew & Y.Wang, PRB, 45, 13244 (1992))
               = pb: Perdue-Burke-Ernzerhof GGA 96 (used for PEtot GGA). 
                     (Ref: J.P.Perdew, K.Burke & M.Ernzerhof, PRL 77, 3865 (1996))

 (6) spin_inform: one character string, gives the spin information. 
     spin_inform = n : no spin, just plain LDA calculation. 
                 = s : LSDA calculation. In the generation, it produces spin-up and down
                       potentials. But the final result takes a occupation weighted 
                       average of the two potentials, and use the averaged potential to 
                       generate the wavefunctions for KB implementation.  This might be
                       useful for PEtot LSDA calculation, especially when you know for
                       a magnetic atom, what is the probable spin-up and down occupations. 
                       Note that, to do a PEtot LSDA calculation, it is not absolutely 
                       required (and in practice, often not) to use a LSDA generated 
                       pseudopotential.
                   r:  Relativistic calculation for the core electrons. This is needed for
                       any heavy elements (see atom_table.input). It produces  
                       v(l+1/2) and v(l-1/2). The difference of them is stored in vwr.atom
                       for possible spin-orbit coupling calculation (not supported in 
                       PEtot but supported in Escan). For LDA calculation, the average of
                       v(l+1/2) and v(l-1/2) is used, and stored in vwr.atom. 
                      

  (7) znuc, zsh, rsh, rmax, aa, bb: The information for nuclear charge, shell charge, 
                      and data to generate the numerical grid r. Suggestion: put 6 zeros
                      here, as a result, default values will be used. znuc will be obtained
                      from the atomic name, but you can also input znuc, for example 
                      znuc=33 for As. 
  
 (8) ncore, nval: number of core and valence levels. Note that, only the electrons put
                  in the valence here will appear in PEtot calculation. 
                  example: for the core of Si [1s^2 2s^2 2p^6], ncore=3. 

                  nval is the number of valence level you like to calculate the nonlocal
                  pseudopotential for. Only one valence level for each angular moment. 
                  So, usually, nval=1, or 2, or 3, or 4 (f not supported by PEtot). 
                  There will be nval "ni,li,zd,zu" lines following the current line. 
                  E.g, if you want to calculate 3s,3p,3d for valence Si, you have nval=3.
 (9) ni,li,zd,zu: describe one valence level to be calculated, and generate one 
                  pseudopotential for this level. ni: the quantum number, li: the angular
                  momentum, zd: the occupation for up spin, zu: the occupation for down
                  spin. Thus: 3,0,1.5,0.5  means: 3s_up^1.5 s_down^0.5. 
                              3,1,4.0,0.0  means: 3p_up^4.0 p_down^0.0. 
                              3,2,0.0,0.0  means: 3d^0 (but this line is necessary, so
                                           the 3d wavefunction and potential will be 
                                           calculated, although there is no valence 
                                           occupation here).

                  Note that, when "spin-inform" (of (6)) equals: n, or r,  only zd+zu
                  matters. 
                  Also, the total sum of zd+zu for all the nval line is the total valence
                  electron in the calculation. In most times, it equals the znuc-zcore 
                  (ie, the residual pseudo nuclear charge), this is a neutral atom 
                  calculation. But they can also be different, representing a ionic 
                  calculation. This can be used to emulate the ionization situation in 
                  an solid.  
                  No two lines of "ni,li,zd,zu" should have the same li. 
                  Currently, PEtot only supports the li=0,1,2.  

 (10) rc_1, rc_2, rc_3...: the cut off radius (in Bohr, not Anstrong) for the 
                  nval levels (nval numbers need to be placed here, corresponding to 
                  the nval "ni,li,zd,zu" lines). These are the s,p,d, cut off rc. 
                  Outside rc, the pseudowavefunction is the same as the original 
                  wavefunction in all electron case. (Note that the corresponding 
                  pseudopotential v_s,v_p,.. might not be the same as (znuc-zcore)/r, 
                  since the core charge might still exist outside rc. 
                  Larger the rc, softer the pseudopotential (smaller Ecut), but worse is
                  its transferability. 
                  If you don't know what to put here, put zero, then it will be generated
                  automatically by the default procedure. The final rc is reported 
                  in atom.out. 
                   
 (11) llocal, occ_s, occ_p, occ_d: This line is not used in pseudopotential generation, 
                  (e.g, not for program atom.exe), it is only used for the information for
                  Kleiman-Bylander implementation, and placed directly in vwr.atom. It is
                  used in KB analysis program (atomkb.exe, kbconv.exe, etc). 
                  llocal: the angular momentum for the local potential (llocal:0,1,2 for 
                  s,p,d.  In KB implementation
                  from the v_s,v_p,v_d you produced, you have to choose one as the local
                  potential. The concern here is to choose the important one as the local
                  (because it is the most reliable), and to avoid the ghost state (very 
                  deep, spurious state due to KB implementation). Also, choose d (llocal=2)
                  as the local might save some computational time in PEtot. 
                  If you find one selection of llocal produce a KB ghost state, try another
                  choice. 
                  occ_s,occ_p,occ_d: the occupation for s,p,d (you must place all s,p,d
                  values here, regardless of the value of nval, e.g., even for nval=2). 
                  This is used in PEtot to generate the initial atomic charge density from
                  the wavefunctions. Make sure, if occ_l.ne.0, then the corresponding 
                  wavefunction is bounded (e.g, for d state). we are not using zd+zu for
                  occ_l, since sometime you want them to be different. Usually, make sure
                  occ_s+occ_p+occ_d=znuc-zcharge (i.e, you have a neutral atom, even if you
                  have used ionic configuration to generate the potential). 
                  Note, occ_s,occ_p,occ_d are not cruicially important, because they are 
                  only used to generate the initial screening charge in the PEtot 
                  calculation. They should not affect the converged results.  

          


                 
